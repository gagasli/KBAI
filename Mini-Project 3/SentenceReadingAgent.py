import re

class SentenceReadingAgent:
    def __init__(self):
      #If you want to do any initial processing, add it here.
      pass

    def solve(self, sentence, question):
      '''
        You can use a library like spacy (https://spacy.io/usage/linguistic-features) to preprocess the
          mostcommon.txt file. There are others that could be used but you must use them in preprocessing only.
          You CANNOT import the library into Gradescope.
        
        You must include whatever preprocessing you've done into your SentenceReadingAgent.py.
        
        DO NOT use another file .txt or .csv. Hard code your DICTS | LISTS into this .py file
        
        While the supplied mostcommon.txt contains most of the common words you will need
          you can (and SHOULD) expand the file as you find cases that the agent has problems
          processing. 
          
        Also not all words will be processed using the correct lexing for every possible problem the 
          agent might encounter and you are ENCOURAGED to expand these in your agents knowledge representation.
      '''

      #Add your code here! Your solve method should receive
      #two strings as input: sentence and question. It should
      #return a string representing the answer to the question.

      target_pos, hint_words = split_question(question)
      answer = search_sentence(sentence, target_pos, hint_words, question)

      return answer

lookup_dict = {
    "Where": ["NOUN"],
    "Who": ["PROPN", "PRON"],
    "What":["NOUN"],
    "How long":["ADJ"],
    "How far":["UNIT"],
    "How big":["ADJ"],
    "How":["VERB"],
    "At what time":["TIME"],
    "When":["TIME"],
    "What color":["ADJ"],
    "How many":["NUM"],
}

ignore_list = ['and', 'the']

import re
def is_valid_time_format(input_str):
    # Define a regular expression pattern for the valid time format
    pattern = r'^\d{1,2}:\d{2}(AM|PM)?$'

    # Use re.match to check if the input string matches the pattern
    if re.match(pattern, input_str):
        return True
    else:
        return False
    
def get_pos_tag(word):

    if is_valid_time_format(word): return "TIME"
    else: return pos_tag_dict[word.lower()]

def get_word_list(text):
    text = text[:-1] if not text[-1].isalnum() else text
    return text.split(' ')
    

def split_question(question):
    
    split_index = None
    word_list = get_word_list(question)

    if question[:4] == 'What' and question[-2:] == 'do':
        return "VERB", word_list[1:]

    if 'How many' in question:
        return 'NUM', word_list[2:]

    for index in range(len(word_list)):
        word = word_list[index]
        if get_pos_tag(word) in ["VERB", "AUX"]:
            split_index = index
            break

    if not split_index: return
    
    question_type = ' '.join(word_list[:split_index])
    # print(question_type)
    target_pos = get_target_pos(question_type)
    hint_words = word_list[split_index+1:] if word in ['does', 'do', 'did'] else word_list[split_index:]
    hint_words = [word.lower() for word in hint_words]
    
    return target_pos, hint_words

def get_target_pos(question_type):
    if question_type in lookup_dict: return lookup_dict[question_type]
    return "NOUN"
    

def get_word_index(word, word_list):

    index_list = []
    for index in range(len(word_list)):
        candidate = word_list[index].lower()
        if word == candidate: index_list.append(index)

    return index_list

def search_sentence(sentence, target_pos, hint_words, question):

    sentence_word_list = get_word_list(sentence)
    min_dist = len(sentence_word_list)
    answer = None
    for hint_word in hint_words:
        if hint_word not in [word.lower() for word in sentence_word_list] or hint_word in ignore_list: continue
        hint_index_list = get_word_index(hint_word, sentence_word_list)
        for word_index, word in enumerate(sentence_word_list):
            # print(word)
            if word in question: continue
            if get_pos_tag(word) == "PROPN" and word in hint_words: continue
            if get_pos_tag(word) not in target_pos: continue
            dist = min(map(lambda hint_index: abs(hint_index-word_index), hint_index_list))
            if dist <= min_dist:
                min_dist = dist
                answer = word
                
        print("HINT: "+hint_word)
        return answer

    return answer

pos_tag_dict = {"serena":"VERB",
"andrew":"PROPN",
"bobbie":"PROPN",
"cason":"PROPN",
"david":"PROPN",
"farzana":"PROPN",
"frank":"PROPN",
"hannah":"PROPN",
"ida":"PROPN",
"irene":"PROPN",
"jim":"PROPN",
"jose":"PROPN",
"keith":"PROPN",
"laura":"PROPN",
"lucy":"PROPN",
"meredith":"PROPN",
"nick":"PROPN",
"ada":"PROPN",
"yeeling":"PROPN",
"yan":"PROPN",
"the":"PRON",
"of":"ADP",
"to":"ADP",
"and":"CCONJ",
"a":"X",
"in":"ADP",
"is":"AUX",
"it":"PRON",
"you":"PRON",
"that":"SCONJ",
"he":"PRON",
"was":"AUX",
"for":"ADP",
"on":"ADP",
"are":"AUX",
"with":"ADP",
"as":"ADP",
"I":"PRON",
"his":"PRON",
"they":"PRON",
"be":"AUX",
"at":"ADP",
"one":"NUM",
"have":"VERB",
"this":"PRON",
"from":"ADP",
"or":"CCONJ",
"had":"VERB",
"by":"ADP",
"hot":"ADJ",
"but":"CCONJ",
"some":"PRON",
"what":"PRON",
"there":"ADV",
"we":"PRON",
"can":"AUX",
"out":"ADV",
"other":"ADJ",
"were":"AUX",
"all":"PRON",
"your":"PRON",
"when":"SCONJ",
"up":"ADV",
"use":"VERB",
"word":"NOUN",
"how":"SCONJ",
"said":"VERB",
"an":"PRON",
"each":"PRON",
"she":"PRON",
"which":"PRON",
"do":"VERB",
"their":"PRON",
"time":"NOUN",
"if":"SCONJ",
"will":"AUX",
"way":"NOUN",
"about":"ADP",
"many":"ADJ",
"then":"ADV",
"them":"PRON",
"would":"AUX",
"write":"VERB",
"wrote":"VERB",
"like":"ADP",
"so":"ADV",
"these":"PRON",
"her":"NOUN",
"long":"ADV",
"make":"VERB",
"thing":"NOUN",
"see":"VERB",
"him":"PRON",
"two":"NUM",
"has":"VERB",
"look":"VERB",
"more":"ADJ",
"day":"NOUN",
"could":"AUX",
"go":"VERB",
"come":"VERB",
"did":"VERB",
"my":"PRON",
"sound":"VERB",
"no":"INTJ",
"most":"ADJ",
"number":"NOUN",
"who":"PRON",
"over":"ADP",
"know":"VERB",
"water":"NOUN",
"than":"ADP",
"call":"VERB",
"first":"ADV",
"people":"NOUN",
"may":"AUX",
"down":"ADV",
"side":"NOUN",
"been":"AUX",
"now":"ADV",
"find":"VERB",
"any":"PRON",
"new":"PROPN",
"work":"NOUN",
"part":"NOUN",
"take":"VERB",
"get":"VERB",
"place":"NOUN",
"made":"VERB",
"live":"VERB",
"where":"SCONJ",
"after":"ADP",
"back":"ADV",
"little":"ADJ",
"only":"ADV",
"round":"VERB",
"man":"NOUN",
"year":"NOUN",
"came":"VERB",
"show":"VERB",
"every":"PRON",
"good":"ADJ",
"me":"PRON",
"give":"VERB",
"our":"PRON",
"under":"ADP",
"name":"NOUN",
"very":"ADV",
"through":"ADP",
"just":"ADV",
"form":"NOUN",
"much":"ADJ",
"great":"ADJ",
"think":"VERB",
"say":"VERB",
"help":"VERB",
"low":"ADJ",
"line":"NOUN",
"before":"ADP",
"turn":"VERB",
"cause":"NOUN",
"same":"ADJ",
"mean":"VERB",
"differ":"VERB",
"move":"VERB",
"right":"ADV",
"boy":"INTJ",
"old":"ADJ",
"too":"ADV",
"does":"VERB",
"tell":"VERB",
"sentence":"NOUN",
"set":"VERB",
"three":"NUM",
"want":"VERB",
"air":"NOUN",
"well":"ADV",
"also":"ADV",
"play":"VERB",
"small":"ADJ",
"end":"NOUN",
"put":"VERB",
"home":"NOUN",
"read":"VERB",
"hand":"NOUN",
"port":"NOUN",
"large":"ADJ",
"spell":"VERB",
"add":"VERB",
"even":"ADV",
"land":"NOUN",
"here":"ADV",
"must":"AUX",
"big":"ADJ",
"high":"ADJ",
"such":"ADJ",
"follow":"VERB",
"act":"VERB",
"why":"SCONJ",
"ask":"VERB",
"men":"NOUN",
"change":"VERB",
"went":"VERB",
"light":"ADJ",
"kind":"ADV",
"off":"ADV",
"need":"VERB",
"house":"NOUN",
"picture":"NOUN",
"try":"VERB",
"us":"PRON",
"again":"ADV",
"animal":"NOUN",
"point":"NOUN",
"mother":"NOUN",
"world":"NOUN",
"near":"ADP",
"build":"VERB",
"self":"NOUN",
"earth":"NOUN",
"father":"NOUN",
"head":"NOUN",
"stand":"VERB",
"own":"VERB",
"page":"NOUN",
"should":"AUX",
"country":"NOUN",
"found":"VERB",
"answer":"VERB",
"school":"NOUN",
"grow":"VERB",
"study":"NOUN",
"still":"ADV",
"learn":"VERB",
"plant":"NOUN",
"cover":"VERB",
"food":"NOUN",
"sun":"NOUN",
"four":"NUM",
"thought":"VERB",
"let":"VERB",
"keep":"VERB",
"eye":"NOUN",
"never":"ADV",
"last":"ADJ",
"door":"NOUN",
"between":"ADP",
"city":"NOUN",
"tree":"NOUN",
"cross":"VERB",
"since":"SCONJ",
"hard":"ADV",
"start":"VERB",
"might":"AUX",
"story":"NOUN",
"saw":"VERB",
"far":"ADV",
"sea":"NOUN",
"draw":"VERB",
"left":"VERB",
"late":"ADV",
"run":"VERB",
"don't":"VERB",
"while":"SCONJ",
"press":"NOUN",
"close":"ADJ",
"night":"TIME",
"real":"ADJ",
"life":"NOUN",
"few":"ADJ",
"stop":"VERB",
"open":"VERB",
"seem":"VERB",
"together":"ADV",
"next":"ADV",
"white":"ADJ",
"children":"PRON",
"begin":"VERB",
"got":"VERB",
"walk":"VERB",
"example":"NOUN",
"ease":"VERB",
"paper":"NOUN",
"often":"ADV",
"always":"ADV",
"music":"NOUN",
"those":"PRON",
"both":"PRON",
"mark":"NOUN",
"book":"NOUN",
"letter":"NOUN",
"until":"ADP",
"mile":"UNIT",
"river":"NOUN",
"car":"NOUN",
"feet":"NOUN",
"care":"VERB",
"second":"ADV",
"group":"NOUN",
"carry":"VERB",
"took":"VERB",
"rain":"NOUN",
"eat":"VERB",
"room":"NOUN",
"friend":"PRON",
"began":"VERB",
"idea":"NOUN",
"fish":"NOUN",
"mountain":"NOUN",
"north":"NOUN",
"once":"ADV",
"base":"NOUN",
"hear":"VERB",
"horse":"NOUN",
"cut":"VERB",
"sure":"ADJ",
"watch":"VERB",
"color":"NOUN",
"face":"NOUN",
"wood":"NOUN",
"main":"ADJ",
"enough":"ADJ",
"plain":"ADJ",
"girl":"NOUN",
"usual":"ADJ",
"young":"ADJ",
"ready":"ADJ",
"above":"ADP",
"ever":"ADV",
"red":"ADJ",
"list":"NOUN",
"though":"ADV",
"feel":"VERB",
"talk":"VERB",
"bird":"NOUN",
"soon":"TIME",
"body":"NOUN",
"dog":"NOUN",
"dogs":"NOUN",
"dog's":"NOUN",
"family":"NOUN",
"direct":"ADJ",
"pose":"VERB",
"leave":"VERB",
"song":"NOUN",
"measure":"NOUN",
"state":"NOUN",
"product":"NOUN",
"black":"ADJ",
"short":"ADJ",
"numeral":"ADJ",
"class":"NOUN",
"wind":"NOUN",
"question":"NOUN",
"happen":"VERB",
"complete":"VERB",
"ship":"NOUN",
"area":"NOUN",
"half":"ADV",
"rock":"NOUN",
"order":"NOUN",
"fire":"NOUN",
"south":"NOUN",
"problem":"NOUN",
"piece":"NOUN",
"told":"VERB",
"knew":"VERB",
"pass":"VERB",
"farm":"NOUN",
"top":"ADV",
"whole":"ADJ",
"king":"NOUN",
"size":"NOUN",
"heard":"VERB",
"best":"ADV",
"hour":"NOUN",
"better":"ADV",
"true":"ADJ",
"during":"ADP",
"hundred":"NUM",
"am":"AUX",
"remember":"VERB",
"step":"NOUN",
"early":"ADV",
"hold":"VERB",
"west":"PROPN",
"ground":"NOUN",
"interest":"NOUN",
"reach":"VERB",
"fast":"ADV",
"five":"NUM",
"sing":"VERB",
"sings":"VERB",
"listen":"VERB",
"six":"NUM",
"table":"NOUN",
"travel":"NOUN",
"less":"ADV",
"morning":"TIME",
"ten":"NUM",
"simple":"ADJ",
"several":"ADJ",
"vowel":"NOUN",
"toward":"ADP",
"war":"NOUN",
"lay":"VERB",
"against":"ADP",
"pattern":"NOUN",
"slow":"VERB",
"center":"VERB",
"love":"VERB",
"person":"NOUN",
"money":"NOUN",
"serve":"VERB",
"appear":"VERB",
"road":"NOUN",
"map":"VERB",
"science":"NOUN",
"rule":"NOUN",
"govern":"VERB",
"pull":"VERB",
"cold":"VERB",
"notice":"NOUN",
"voice":"NOUN",
"fall":"VERB",
"power":"NOUN",
"town":"NOUN",
"fine":"ADJ",
"certain":"ADJ",
"fly":"VERB",
"unit":"NOUN",
"lead":"VERB",
"cry":"VERB",
"dark":"ADJ",
"machine":"NOUN",
"note":"NOUN",
"wait":"VERB",
"plan":"VERB",
"figure":"NOUN",
"star":"PROPN",
"box":"NOUN",
"noun":"NOUN",
"field":"NOUN",
"rest":"VERB",
"correct":"ADJ",
"able":"ADJ",
"pound":"UNIT",
"done":"VERB",
"beauty":"NOUN",
"drive":"VERB",
"stood":"VERB",
"contain":"VERB",
"front":"NOUN",
"teach":"VERB",
"week":"NOUN",
"final":"ADJ",
"gave":"VERB",
"green":"PROPN",
"oh":"INTJ",
"quick":"ADJ",
"develop":"VERB",
"sleep":"NOUN",
"warm":"ADJ",
"free":"ADJ",
"minute":"NOUN",
"strong":"ADJ",
"special":"ADJ",
"mind":"VERB",
"behind":"ADP",
"clear":"ADJ",
"tail":"NOUN",
"produce":"VERB",
"fact":"NOUN",
"street":"NOUN",
"inch":"UNIT",
"lot":"NOUN",
"nothing":"PRON",
"course":"NOUN",
"stay":"VERB",
"wheel":"NOUN",
"full":"ADJ",
"force":"PROPN",
"blue":"ADJ",
"object":"VERB",
"decide":"VERB",
"surface":"NOUN",
"deep":"ADJ",
"moon":"PROPN",
"island":"NOUN",
"foot":"NOUN",
"yet":"ADV",
"busy":"ADJ",
"test":"NOUN",
"record":"VERB",
"boat":"NOUN",
"common":"ADJ",
"gold":"NOUN",
"possible":"ADJ",
"plane":"NOUN",
"age":"NOUN",
"dry":"VERB",
"wonder":"VERB",
"laugh":"VERB",
"thousand":"NUM",
"ago":"ADV",
"ran":"VERB",
"check":"VERB",
"game":"NOUN",
"shape":"NOUN",
"yes":"INTJ",
"cool":"INTJ",
"miss":"VERB",
"brought":"VERB",
"heat":"NOUN",
"snow":"NOUN",
"bed":"NOUN",
"bring":"VERB",
"sit":"VERB",
"perhaps":"ADV",
"fill":"VERB",
"east":"NOUN",
"weight":"NOUN",
"language":"NOUN",
"among":"ADP",
"adult":"PRON",
"adults":"PRON"
}


